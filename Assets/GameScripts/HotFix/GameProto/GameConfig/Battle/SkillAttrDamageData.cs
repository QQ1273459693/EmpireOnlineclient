//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace GameConfig.Battle
{ 

public sealed partial class SkillAttrDamageData :  Bright.Config.BeanBase 
{
    public SkillAttrDamageData(JSONNode _json) 
    {
        { if(!_json["MagicType"].IsNumber) { throw new SerializationException(); }  MagicType = (Battle.SkillMagicType)_json["MagicType"].AsInt; }
        { if(!_json["AttrType"].IsNumber) { throw new SerializationException(); }  AttrType = (Battle.SkillAttrDamageType)_json["AttrType"].AsInt; }
        { if(!_json["Param1"].IsNumber) { throw new SerializationException(); }  Param1 = _json["Param1"]; }
        { if(!_json["Param2"].IsNumber) { throw new SerializationException(); }  Param2 = _json["Param2"]; }
        { if(!_json["Param3"].IsNumber) { throw new SerializationException(); }  Param3 = _json["Param3"]; }
        { if(!_json["MaxLimit"].IsNumber) { throw new SerializationException(); }  MaxLimit = _json["MaxLimit"]; }
        PostInit();
    }

    public SkillAttrDamageData(Battle.SkillMagicType MagicType, Battle.SkillAttrDamageType AttrType, float Param1, float Param2, float Param3, float MaxLimit ) 
    {
        this.MagicType = MagicType;
        this.AttrType = AttrType;
        this.Param1 = Param1;
        this.Param2 = Param2;
        this.Param3 = Param3;
        this.MaxLimit = MaxLimit;
        PostInit();
    }

    public static SkillAttrDamageData DeserializeSkillAttrDamageData(JSONNode _json)
    {
        return new Battle.SkillAttrDamageData(_json);
    }

    public Battle.SkillMagicType MagicType { get; private set; }
    public Battle.SkillAttrDamageType AttrType { get; private set; }
    public float Param1 { get; private set; }
    public float Param2 { get; private set; }
    public float Param3 { get; private set; }
    public float MaxLimit { get; private set; }

    public const int __ID__ = -94519547;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "MagicType:" + MagicType + ","
        + "AttrType:" + AttrType + ","
        + "Param1:" + Param1 + ","
        + "Param2:" + Param2 + ","
        + "Param3:" + Param3 + ","
        + "MaxLimit:" + MaxLimit + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
