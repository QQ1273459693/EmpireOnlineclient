//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;



namespace GameConfig
{ 
public partial class Tables
{
    public item.TbItem TbItem {get; }
    public equipment.TbEquipment TbEquipment {get; }
    public itemBackGround.TbItemBgGround TbItemBgGround {get; }
    public enemySpine.TbEnemySpine TbEnemySpine {get; }
    public enemyConfig.TbEnemyConfig TbEnemyConfig {get; }
    public item1.TbItem1 TbItem1 {get; }
    public equipmentBase.TbEquipmentBase TbEquipmentBase {get; }
    public itemBackGround1.TbItemBgGround1 TbItemBgGround1 {get; }
    public fightingBase.TbFightingBase TbFightingBase {get; }
    public initialRoleAttrieBase.TbInitialRoleAttrieBase TbInitialRoleAttrieBase {get; }
    public swordSkillBase.TbSwordSkillBase TbSwordSkillBase {get; }
    public enemySkillBase.TbEnemySkillBase TbEnemySkillBase {get; }
    public enemyModelBase.TbEnemyModelBase TbEnemyModelBase {get; }
    public vFXSkillModelBase.TBVFXSkillModelBase TBVFXSkillModelBase {get; }
    public NpcConfigBase.TBNpcConfigBase TBNpcConfigBase {get; }

    public Tables(System.Func<string, ByteBuf> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbItem = new item.TbItem(loader("item_tbitem")); 
        tables.Add("item.TbItem", TbItem);
        TbEquipment = new equipment.TbEquipment(loader("equipment_tbequipment")); 
        tables.Add("equipment.TbEquipment", TbEquipment);
        TbItemBgGround = new itemBackGround.TbItemBgGround(loader("itembackground_tbitembgground")); 
        tables.Add("itemBackGround.TbItemBgGround", TbItemBgGround);
        TbEnemySpine = new enemySpine.TbEnemySpine(loader("enemyspine_tbenemyspine")); 
        tables.Add("enemySpine.TbEnemySpine", TbEnemySpine);
        TbEnemyConfig = new enemyConfig.TbEnemyConfig(loader("enemyconfig_tbenemyconfig")); 
        tables.Add("enemyConfig.TbEnemyConfig", TbEnemyConfig);
        TbItem1 = new item1.TbItem1(loader("item1_tbitem1")); 
        tables.Add("item1.TbItem1", TbItem1);
        TbEquipmentBase = new equipmentBase.TbEquipmentBase(loader("equipmentbase_tbequipmentbase")); 
        tables.Add("equipmentBase.TbEquipmentBase", TbEquipmentBase);
        TbItemBgGround1 = new itemBackGround1.TbItemBgGround1(loader("itembackground1_tbitembgground1")); 
        tables.Add("itemBackGround1.TbItemBgGround1", TbItemBgGround1);
        TbFightingBase = new fightingBase.TbFightingBase(loader("fightingbase_tbfightingbase")); 
        tables.Add("fightingBase.TbFightingBase", TbFightingBase);
        TbInitialRoleAttrieBase = new initialRoleAttrieBase.TbInitialRoleAttrieBase(loader("initialroleattriebase_tbinitialroleattriebase")); 
        tables.Add("initialRoleAttrieBase.TbInitialRoleAttrieBase", TbInitialRoleAttrieBase);
        TbSwordSkillBase = new swordSkillBase.TbSwordSkillBase(loader("swordskillbase_tbswordskillbase")); 
        tables.Add("swordSkillBase.TbSwordSkillBase", TbSwordSkillBase);
        TbEnemySkillBase = new enemySkillBase.TbEnemySkillBase(loader("enemyskillbase_tbenemyskillbase")); 
        tables.Add("enemySkillBase.TbEnemySkillBase", TbEnemySkillBase);
        TbEnemyModelBase = new enemyModelBase.TbEnemyModelBase(loader("enemymodelbase_tbenemymodelbase")); 
        tables.Add("enemyModelBase.TbEnemyModelBase", TbEnemyModelBase);
        TBVFXSkillModelBase = new vFXSkillModelBase.TBVFXSkillModelBase(loader("vfxskillmodelbase_tbvfxskillmodelbase")); 
        tables.Add("vFXSkillModelBase.TBVFXSkillModelBase", TBVFXSkillModelBase);
        TBNpcConfigBase = new NpcConfigBase.TBNpcConfigBase(loader("npcconfigbase_tbnpcconfigbase")); 
        tables.Add("NpcConfigBase.TBNpcConfigBase", TBNpcConfigBase);

        PostInit();
        TbItem.Resolve(tables); 
        TbEquipment.Resolve(tables); 
        TbItemBgGround.Resolve(tables); 
        TbEnemySpine.Resolve(tables); 
        TbEnemyConfig.Resolve(tables); 
        TbItem1.Resolve(tables); 
        TbEquipmentBase.Resolve(tables); 
        TbItemBgGround1.Resolve(tables); 
        TbFightingBase.Resolve(tables); 
        TbInitialRoleAttrieBase.Resolve(tables); 
        TbSwordSkillBase.Resolve(tables); 
        TbEnemySkillBase.Resolve(tables); 
        TbEnemyModelBase.Resolve(tables); 
        TBVFXSkillModelBase.Resolve(tables); 
        TBNpcConfigBase.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbItem.TranslateText(translator); 
        TbEquipment.TranslateText(translator); 
        TbItemBgGround.TranslateText(translator); 
        TbEnemySpine.TranslateText(translator); 
        TbEnemyConfig.TranslateText(translator); 
        TbItem1.TranslateText(translator); 
        TbEquipmentBase.TranslateText(translator); 
        TbItemBgGround1.TranslateText(translator); 
        TbFightingBase.TranslateText(translator); 
        TbInitialRoleAttrieBase.TranslateText(translator); 
        TbSwordSkillBase.TranslateText(translator); 
        TbEnemySkillBase.TranslateText(translator); 
        TbEnemyModelBase.TranslateText(translator); 
        TBVFXSkillModelBase.TranslateText(translator); 
        TBNpcConfigBase.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}