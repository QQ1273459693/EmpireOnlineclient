//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace GameConfig.enemyConfig
{ 

public sealed partial class EnemyConfig :  Bright.Config.BeanBase 
{
    public EnemyConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { if(!_json["Hp"].IsNumber) { throw new SerializationException(); }  Hp = _json["Hp"]; }
        { if(!_json["Attack"].IsNumber) { throw new SerializationException(); }  Attack = _json["Attack"]; }
        { if(!_json["Defence"].IsNumber) { throw new SerializationException(); }  Defence = _json["Defence"]; }
        { if(!_json["Age"].IsNumber) { throw new SerializationException(); }  Age = _json["Age"]; }
        { if(!_json["AtkRage"].IsNumber) { throw new SerializationException(); }  AtkRage = _json["AtkRage"]; }
        { if(!_json["TakeDamageRage"].IsNumber) { throw new SerializationException(); }  TakeDamageRage = _json["TakeDamageRage"]; }
        { if(!_json["MaxRage"].IsNumber) { throw new SerializationException(); }  MaxRage = _json["MaxRage"]; }
        { if(!_json["Type"].IsNumber) { throw new SerializationException(); }  Type = _json["Type"]; }
        { if(!_json["SkillDes"].IsString) { throw new SerializationException(); }  SkillDes = _json["SkillDes"]; }
        { var __json0 = _json["SkillidList"]; if(!__json0.IsArray) { throw new SerializationException(); } SkillidList = new System.Collections.Generic.List<int>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { int __v0;  { if(!__e0.IsNumber) { throw new SerializationException(); }  __v0 = __e0; }  SkillidList.Add(__v0); }   }
        PostInit();
    }

    public EnemyConfig(int id, string Name, int Hp, int Attack, int Defence, int Age, int AtkRage, int TakeDamageRage, int MaxRage, int Type, string SkillDes, System.Collections.Generic.List<int> SkillidList ) 
    {
        this.Id = id;
        this.Name = Name;
        this.Hp = Hp;
        this.Attack = Attack;
        this.Defence = Defence;
        this.Age = Age;
        this.AtkRage = AtkRage;
        this.TakeDamageRage = TakeDamageRage;
        this.MaxRage = MaxRage;
        this.Type = Type;
        this.SkillDes = SkillDes;
        this.SkillidList = SkillidList;
        PostInit();
    }

    public static EnemyConfig DeserializeEnemyConfig(JSONNode _json)
    {
        return new enemyConfig.EnemyConfig(_json);
    }

    /// <summary>
    /// 怪物ID
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 怪物名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 血量
    /// </summary>
    public int Hp { get; private set; }
    /// <summary>
    /// 攻击力
    /// </summary>
    public int Attack { get; private set; }
    /// <summary>
    /// 防御力
    /// </summary>
    public int Defence { get; private set; }
    /// <summary>
    /// 敏捷值
    /// </summary>
    public int Age { get; private set; }
    /// <summary>
    /// 攻击回复的怒气值
    /// </summary>
    public int AtkRage { get; private set; }
    /// <summary>
    /// 受击恢复的怒气值
    /// </summary>
    public int TakeDamageRage { get; private set; }
    /// <summary>
    /// 最大怒气值
    /// </summary>
    public int MaxRage { get; private set; }
    /// <summary>
    /// 怪物类型
    /// </summary>
    public int Type { get; private set; }
    /// <summary>
    /// 技能描述
    /// </summary>
    public string SkillDes { get; private set; }
    /// <summary>
    /// 技能数组
    /// </summary>
    public System.Collections.Generic.List<int> SkillidList { get; private set; }

    public const int __ID__ = 1340359110;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Hp:" + Hp + ","
        + "Attack:" + Attack + ","
        + "Defence:" + Defence + ","
        + "Age:" + Age + ","
        + "AtkRage:" + AtkRage + ","
        + "TakeDamageRage:" + TakeDamageRage + ","
        + "MaxRage:" + MaxRage + ","
        + "Type:" + Type + ","
        + "SkillDes:" + SkillDes + ","
        + "SkillidList:" + Bright.Common.StringUtil.CollectionToString(SkillidList) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
