//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace GameConfig.equipment
{ 

public sealed partial class Equipment :  Bright.Config.BeanBase 
{
    public Equipment(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["equipType"].IsNumber) { throw new SerializationException(); }  EquipType = (equipment.EquipmentFlag)_json["equipType"].AsInt; }
        { var __json0 = _json["Attribute"]; if(!__json0.IsArray) { throw new SerializationException(); } Attribute = new System.Collections.Generic.List<equipment.EquipmentAttribute>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { equipment.EquipmentAttribute __v0;  { if(!__e0.IsObject) { throw new SerializationException(); }  __v0 = equipment.EquipmentAttribute.DeserializeEquipmentAttribute(__e0);  }  Attribute.Add(__v0); }   }
        { var __json0 = _json["SpineIcon"]; if(!__json0.IsArray) { throw new SerializationException(); } SpineIcon = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  SpineIcon.Add(__v0); }   }
        PostInit();
    }

    public Equipment(int id, equipment.EquipmentFlag equipType, System.Collections.Generic.List<equipment.EquipmentAttribute> Attribute, System.Collections.Generic.List<string> SpineIcon ) 
    {
        this.Id = id;
        this.EquipType = equipType;
        this.Attribute = Attribute;
        this.SpineIcon = SpineIcon;
        PostInit();
    }

    public static Equipment DeserializeEquipment(JSONNode _json)
    {
        return new equipment.Equipment(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 装备类型
    /// </summary>
    public equipment.EquipmentFlag EquipType { get; private set; }
    /// <summary>
    /// 装备属性
    /// </summary>
    public System.Collections.Generic.List<equipment.EquipmentAttribute> Attribute { get; private set; }
    /// <summary>
    /// Spine换装Icon
    /// </summary>
    public System.Collections.Generic.List<string> SpineIcon { get; private set; }

    public const int __ID__ = 1123362062;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in Attribute) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in Attribute) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "EquipType:" + EquipType + ","
        + "Attribute:" + Bright.Common.StringUtil.CollectionToString(Attribute) + ","
        + "SpineIcon:" + Bright.Common.StringUtil.CollectionToString(SpineIcon) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
