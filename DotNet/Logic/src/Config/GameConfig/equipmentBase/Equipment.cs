//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace GameConfig.equipmentBase
{
public sealed partial class Equipment :  Bright.Config.BeanBase 
{
    public Equipment(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        EquipType = (equipment.EquipmentFlag)_buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);Attribute = new System.Collections.Generic.List<equipmentBase.Attribute>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { equipmentBase.Attribute _e0;  _e0 = equipmentBase.Attribute.DeserializeAttribute(_buf); Attribute.Add(_e0);}}
        PostInit();
    }

    public static Equipment DeserializeEquipment(ByteBuf _buf)
    {
        return new equipmentBase.Equipment(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 装备类型
    /// </summary>
    public equipment.EquipmentFlag EquipType { get; private set; }
    /// <summary>
    /// 装备属性
    /// </summary>
    public System.Collections.Generic.List<equipmentBase.Attribute> Attribute { get; private set; }

    public const int __ID__ = -128995393;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in Attribute) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in Attribute) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "EquipType:" + EquipType + ","
        + "Attribute:" + Bright.Common.StringUtil.CollectionToString(Attribute) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}