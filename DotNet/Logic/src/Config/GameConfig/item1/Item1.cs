//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;


namespace GameConfig.item1
{
public sealed partial class Item1 :  Bright.Config.BeanBase 
{
    public Item1(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Type = _buf.ReadInt();
        Icon = _buf.ReadString();
        LevelLimit = _buf.ReadInt();
        Overlapping = _buf.ReadBool();
        Price = _buf.ReadInt();
        Quality = _buf.ReadInt();
        {int n0 = System.Math.Min(_buf.ReadSize(), _buf.Size);ItemTipsDes = new System.Collections.Generic.List<item.ItemTipsDes>(n0);for(var i0 = 0 ; i0 < n0 ; i0++) { item.ItemTipsDes _e0;  _e0 = item.ItemTipsDes.DeserializeItemTipsDes(_buf); ItemTipsDes.Add(_e0);}}
        PostInit();
    }

    public static Item1 DeserializeItem1(ByteBuf _buf)
    {
        return new item1.Item1(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 道具类型
    /// </summary>
    public int Type { get; private set; }
    /// <summary>
    /// 图标
    /// </summary>
    public string Icon { get; private set; }
    /// <summary>
    /// 等级限制
    /// </summary>
    public int LevelLimit { get; private set; }
    /// <summary>
    /// 是否可重叠
    /// </summary>
    public bool Overlapping { get; private set; }
    /// <summary>
    /// 价格
    /// </summary>
    public int Price { get; private set; }
    /// <summary>
    /// 品质
    /// </summary>
    public int Quality { get; private set; }
    /// <summary>
    /// 道具UI效果描述
    /// </summary>
    public System.Collections.Generic.List<item.ItemTipsDes> ItemTipsDes { get; private set; }

    public const int __ID__ = -272648978;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var _e in ItemTipsDes) { _e?.Resolve(_tables); }
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var _e in ItemTipsDes) { _e?.TranslateText(translator); }
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Type:" + Type + ","
        + "Icon:" + Icon + ","
        + "LevelLimit:" + LevelLimit + ","
        + "Overlapping:" + Overlapping + ","
        + "Price:" + Price + ","
        + "Quality:" + Quality + ","
        + "ItemTipsDes:" + Bright.Common.StringUtil.CollectionToString(ItemTipsDes) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}